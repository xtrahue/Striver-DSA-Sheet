class Solution {
public:
    int factorial(int n)
    {
        return (n==1 || n==0) ? 1: n * factorial(n - 1);
    }
    void result(vector<int>&ds,vector<int>&nums, vector<vector<int>>&ans,vector<bool>&freq, int n){
        if(ds.size()==n){
            ans.push_back(ds) ;
            return ;
        }
        for(int i=0;i<n;i++){
            if(freq[i]==0){
                ds.push_back(nums[i]) ;
                freq[i]=1 ;
                result(ds,nums,ans,freq,n) ;
                freq[i]=0 ;
                ds.pop_back() ;
            }
        }        
    }

    vector<vector<int>> permute(vector<int>& nums) {
        int n = nums.size() ;
        vector<vector<int>>ans ;
        vector<int>ds ;

        vector<bool>freq(n,0) ;
        result(ds,nums,ans,freq,n) ;

        return ans ;       
    }    
};
