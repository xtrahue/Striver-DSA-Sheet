//space optimized
class Solution {
  public:
  int mod=1e9+7 ;
    int countPartitions(int n, int d, vector<int>& arr) {
        // Code here
        sort(arr.begin(),arr.end()) ;
        int sum=0 ;
        for(int i=0;i<n;i++){
            sum+=arr[i] ;
        }
        sum-=d ;
        if(sum&1 || sum<0){
            return 0 ;
        }
        sum/=2 ;
        
        
        
        vector<int>prev (sum+1,0) ;
        prev[0]=1 ;
        if(arr[0]<=sum){
            prev[arr[0]]=1 ;
        }
        if(arr[0]==0){
            prev[0]=2 ;
        }
        
        for(int i=1;i<n;i++){
            vector<int>curr(sum+1) ;
            curr[0]=1 ;
            for(int target=0;target<=sum;target++){
                int notTake=prev[target]%mod ;
                int take=0 ;
                if(arr[i]<=target){
                    take=(prev[target-arr[i]])%mod ;
                }
                
                curr[target]=(notTake+take)%mod ;
            }
            prev=curr ;
        }
        
        return (prev[sum]%mod );
        
    }
};
