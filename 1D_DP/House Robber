//nearly same as dp5


//space optimized
#include <bits/stdc++.h> 

long long  int solveit(vector<int>& arr){
    long long int n=arr.size() ;
    long long int prev=arr[0] ;
    long long int prev2=0 ;
    for(long long int i=1;i<n;i++){
        long long int left=prev ;
        long long int right = arr[i] ;

        if(i-2>=0){
            right+=prev2 ;
        }
        prev2=prev ;
        prev = max(left,right) ;
             
        
    }
    return prev ;
}
long long int houseRobber(vector<int>& arr)
{
    // Write your code here.
    long long int n=arr.size() ;
    if(n==1){
        return arr[0] ;
    }
    vector<int>v1 ,v2 ;
    
    for(int i=0;i<n;i++){ 
        if(i!=0){
            v1.push_back(arr[i]) ;
        }
        if(i!=n-1){
            v2.push_back(arr[i]) ;
        }
     }
    
    return max(solveit(v1),solveit(v2)) ;

}
